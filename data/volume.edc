 /*
  * Copyright 2012  Samsung Electronics Co., Ltd
  *
  * Licensed under the Flora License, Version 1.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *     http://www.tizenopensource.org/license
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

#define FONT_NAME "SLP:style=Medium";
/* becasue of popup margin subtract
 * 20 from top
 * 10 from side
 * 15 from bottom
 */

collections {
	group {
		name: "main";

		parts {
			part { name, "bg";
				type, RECT;
				scale: 1;
				description {
					state, "default" 0.0;
					color, 0 0 0 0;
				}
			}
			part {
				name: "swallow/body";
				type: SWALLOW;
				scale: 1;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1 {
						relative: 0.5 0.5;
						to: "bg";
					}
					rel2 {
						relative: 0.5 0.5;
						to: "bg";
					}
					color: 0 0 0 0;
				}
			}
			part {
				name: "rect/title";
				type: RECT;
				scale: 1;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					min: 0 64;
					rel1 {
						relative: 0.0 0.0;
						to: "bg";
					}
					rel2 {
						relative: 1.0 0.0;
						to: "bg";
					}
					color: 255 0 0 250;
				}
			}
		}
	}

	group {
		name: "volume";

		images {
			image: "updown.png" COMP;
			image: "00_volume_icon.png" COMP;
			image: "00_volume_icon_Mute.png" COMP;
			image: "00_volume_icon_Vibrat.png" COMP;
		}

		styles{
			style{
                name: "_style35";
                base: "font=SLP:style=Medium font_size=35 color=#6c6c6cff align=center wrap=word";
				tag:  "br" "\n";
            }
        }


		parts {
			part { name, "bg";
				type, RECT;
				scale: 1;
				description {
					state, "default" 0.0;
					color, 0 0 0 0;
				}
			}

			part {
				name: "rect/body";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: 624 126;
					max: 624 126;
					rel1 {
						to: "bg";
					}
					rel2 {
						to: "bg";
					}
					color: 0 0 0 0;
				}
			}
			part {
				name: "rect/padding/f";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					align: 0.0 0.0;
					min: 30 11;
					rel1 {
						relative: 0.0 0.0;
						to: "bg";
					}
					rel2 {
						relative: 0.0 0.0;
						to: "bg";
					}
					color: 0 0 0 0;
				}
			}
			part {
				name: "rect/padding/b";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					fixed: 1 1;
					align: 1.0 1.0;
					min: 30 16;
					rel1 {
						relative: 1.0 1.0;
						to: "bg";
					}
					rel2 {
						relative: 1.0 1.0;
						to: "bg";
					}
					color: 0 0 0 0;
				}
			}
			part {
				name: "rect/icon";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					align: 0.0 0.0;
					min: 64 64;
					rel1 {
						relative: 1.0 1.0;
						to: "rect/padding/f";
					}
					rel2 {
						relative: 1.0 0.0;
						to_x: "rect/padding/f";
						to_y: "rect/padding/b";
					}
					color: 0 0 0 0;
				}
				description {
					state: "pressed" 0.0;
					inherit: "default" 0.0;
					color: 136 78 255 255;
				}
			}
			part {
				name: "rect/padding/m";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					fixed: 1 0;
					align: 0.0 0.0;
					min: 26 0;
					rel1 {
						relative: 1.0 0.0;
						to: "rect/icon";
					}
					rel2 {
						relative: 1.0 1.0;
						to: "rect/icon";
					}
					color: 0 0 0 0;
				}
			}
			part {
				name: "rect/padding/t/popup";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					min: 0 20;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 0.0;
						to: "bg";
					}
					rel2 {
						relative: 1.0 0.0;
						to: "bg";
					}
					color: 0 0 0 0;
				}
			}

			part {
				name: "rect/slider";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					rel1 {
						relative: 1.0 0.0;
						to: "rect/padding/m";
					}
					rel2 {
						relative: 0.0 0.0;
						to: "rect/padding/b";
					}
					color: 0 0 0 0;
				}
			}
			part {
				name: "image/icon";
				type: IMAGE;
				scale: 1;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					min: 64 64;
					max: 64 64;
					align: 0.5 0.5;
					rel1 {
						to: "rect/icon";
					}
					rel2 {
						to: "rect/icon";
					}
					image {
						normal: "00_volume_icon.png";
					}
					color: 255 255 255 255;
				}
				description {
					state: "mute" 0.0;
					inherit: "default" 0.0;
					image {
						normal: "00_volume_icon_Mute.png";
					}
				}
				description {
					state: "vib" 0.0;
					inherit: "default" 0.0;
					image {
						normal: "00_volume_icon_Vibrat.png";
					}
				}
			}
			part {
				name: "swallow/slider";
				type: SWALLOW;
				scale: 1;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					rel1 {
						to: "rect/slider";
					}
					rel2 {
						to: "rect/slider";
					}
					color: 0 0 0 0;
				}
			}
/*
			part {
				name: "image/updown";
				type: IMAGE;
				scale: 1;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					align: 1.0 0.5;
					fixed: 1 0;
					min: 35 0;
					rel1 {
						relative: 1.0 0.0;
						to: "rect/title/0";
					}
					rel2 {
						relative: 1.0 1.0;
						to: "rect/title/0";
					}
					image {
						normal: "updown.png";
					}
					color: 255 255 255 255;
				}
			}
*/
			part {
				name: "clip/warning";
				type: RECT;
				scale: 1;
				mouse_events: 0;
				description {
					state: "default" 0.0;
					align: 0.5 1.0;
					fixed: 0 1;
					min: 0 300;
					rel1 {
						relative: 0.0 0.0;
						to: "rect/title/0";
					}
					rel2 {
						relative: 1.0 0.0;
						to: "rect/title/0";
					}
					color: 255 255 255 255;
				}
			}

			part {
				name: "rect/warning";
				type: RECT;
				scale: 1;
				clip_to: "clip/warning";
				mouse_events: 0;
				description {
					state: "default" 0.0;
					visible: 0;
					rel1 {
						to: "textblock/warning";
					}
					rel2 {
						to: "textblock/warning";
					}
					color: 255 255 255 160;
				}
				description {
					state: "show" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
			}
			part {
				name: "textblock/warning";
				type: TEXTBLOCK;
				scale: 1;
				clip_to: "clip/warning";
				mouse_events: 1;
				description {
					state: "default" 0.0;
					align: 0.5 0.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 0.0;
						to: "rect/title/0";
					}
					rel2 {
						relative: 1.0 0.0;
						to: "rect/title/0";
					}
					text {
						style: "_style35";
						min: 0 1;
					}
					color: 0 0 0 0;
				}
				description {
					state: "show" 0.0;
					inherit: "default" 0.0;
					align: 0.5 1.0;
					color: 0 0 0 255;
				}
			}


#define PART_TITLE_RECT(title, rely1, rely2) \
			part {\
				name: title;\
				type: RECT;\
				scale: 1;\
				mouse_events: 1;\
				description {\
					state: "default" 0.0;\
					visible: 0;\
					rel1 {\
						to: "rect/title/0";\
					}\
					rel2 {\
						to: "rect/title/0";\
					}\
					color: 0 0 0 0;\
				}\
				description {\
					state: "show" 0.0;\
					inherit: "default" 0.0;\
					visible: 1;\
					rel1 {\
						relative: 0.0 rely1;\
						to: "rect/title/0";\
					}\
					rel2 {\
						relative: 1.0 rely2;\
						to: "rect/title/0";\
					}\
					color: 0 0 0 70;\
				}\
				description {\
					state: "pressed" 0.0;\
					inherit: "show" 0.0;\
					color: 136 78 255 150;\
				}\
			}

			PART_TITLE_RECT("rect/title/4", -3.0, -2.0)
			PART_TITLE_RECT("rect/title/5", -2.0, -1.0)
			PART_TITLE_RECT("rect/title/6", -1.0, 0.0)
			PART_TITLE_RECT("rect/title/1", 1.0, 2.0)
			PART_TITLE_RECT("rect/title/2", 2.0, 3.0)
			PART_TITLE_RECT("rect/title/3", 3.0, 4.0)

#define PART_TITLE_TEXT(title, where) \
			part {\
				name: title;\
				type: TEXT;\
				scale: 1;\
				mouse_events: 0;\
				description {\
					state: "default" 0.0;\
					rel1 {\
						to: where;\
					}\
					rel2 {\
						to: where;\
					}\
					text {\
						font: FONT_NAME;\
						size: 34;\
						min: 0 0;\
					}\
					color, 0 0 0 0;\
				}\
				description {\
					state: "show" 0.0;\
					inherit: "default" 0.0;\
					color, 255 255 255 255;\
				}\
			}

			PART_TITLE_TEXT("text/title/4", "rect/title/4")
			PART_TITLE_TEXT("text/title/5", "rect/title/5")
			PART_TITLE_TEXT("text/title/6", "rect/title/6")
			PART_TITLE_TEXT("text/title/1", "rect/title/1")
			PART_TITLE_TEXT("text/title/2", "rect/title/2")
			PART_TITLE_TEXT("text/title/3", "rect/title/3")

			part {
				name: "rect/title/0";
				type: RECT;
				scale: 1;
				mouse_events: 1;
				description {
					state: "default" 0.0;
					min: 0 64;
					align: 0.5 1.0;
					fixed: 0 1;
					rel1 {
						relative: 0.0 0.0;
						to: "rect/padding/t/popup";
					}
					rel2 {
						relative: 1.0 0.0;
						to: "rect/padding/t/popup";
					}
					color: 0 0 0 0;
				}
				description {
					state: "pressed" 0.0;
					inherit: "default" 0.0;
					color: 136 78 255 150;
				}
			}

		}

		programs {
#define PROG_TITLE_TOUCH(title, src) \
			program {\
				name: "down/title/"title;\
				source: src;\
				signal: "mouse,down,1";\
				action: STATE_SET "pressed" 0.0;\
				target: src;\
			}\
			program {\
				name: "up/title/"title;\
				source: src;\
				signal: "mouse,up,1";\
				action: STATE_SET "show" 0.0;\
				target: src;\
			}
#define PROG_TITLE_UPDOWN(title, tar1, tar2, stime, htime) \
			program {\
				name: "show/title/"title;\
				source: "title";\
				signal: "show";\
				action: STATE_SET "show" 0.0;\
				target: "rect/title/"tar1;\
				target: "rect/title/"tar2;\
				target: "text/title/"tar1;\
				target: "text/title/"tar2;\
				transition: SINUSOIDAL stime;\
			}\
			program {\
				name: "hide/title/"title;\
				source: "title";\
				signal: "hide";\
				action: STATE_SET "default" 0.0;\
				target: "rect/title/"tar1;\
				target: "rect/title/"tar2;\
				target: "text/title/"tar1;\
				target: "text/title/"tar2;\
				transition: SINUSOIDAL htime;\
			}

			PROG_TITLE_UPDOWN("step1", "6", "1", 0.3, 0.5)
			PROG_TITLE_UPDOWN("step2", "5", "2", 0.4, 0.4)
			PROG_TITLE_UPDOWN("step3", "4", "3", 0.5, 0.3)

			program {
				name: "prog/default";
				source: "icon";
				signal: "default";
				action: STATE_SET "default" 0.0;
				target: "image/icon";
			}
			program {
				name: "prog/mute";
				source: "icon";
				signal: "mute";
				action: STATE_SET "mute" 0.0;
				target: "image/icon";
			}
			program {
				name: "prog/vib";
				source: "icon";
				signal: "vib";
				action: STATE_SET "vib" 0.0;
				target: "image/icon";
			}

			program {
				name: "show/warning";
				source: "warning";
				signal: "show";
				action: STATE_SET "show" 0.0;
				target: "rect/warning";
				target: "textblock/warning";
				transition: SINUSOIDAL 0.5;
			}
			program {
				name: "hide/warning";
				source: "warning";
				signal: "hide";
				action: STATE_SET "default" 0.0;
				target: "rect/warning";
				target: "textblock/warning";
				transition: SINUSOIDAL 0.5;
			}
		}
	}
}


